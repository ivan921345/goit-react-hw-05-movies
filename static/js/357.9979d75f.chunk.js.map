{"version":3,"file":"static/js/357.9979d75f.chunk.js","mappings":"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","sources":["components/api/fetchMovies.js","components/pages/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst AUTH_TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4MGNlM2QyYTgwOTM5YzgwOGI1ZTc2MmMyYzJiMTE0OSIsIm5iZiI6MTczMjk2ODI3Mi42NTkwMDAyLCJzdWIiOiI2NzRhZmY1MGYwNDNiYzhhNjc3MWE3NWYiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.4PaZv8ZYXrL6wuwBrMkhPhToNCBZmNtTjXhosCA8S8s';\nconst API_KEY = '80ce3d2a80939c808b5e762c2c2b1149';\n\naxios.defaults.headers.common['Authorization'] = `Bearer ${AUTH_TOKEN}`;\n\nexport const fetchTrendingMovies = async (timeWindow = 'day') => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/${timeWindow}`,\n      {\n        params: {\n          api_key: API_KEY,\n          include_adult: false,\n          language: 'en-US',\n        },\n      }\n    );\n    return resp.data;\n  } catch (error) {\n    console.error('Error:', error);\n    return null;\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      {\n        params: {\n          api_key: API_KEY,\n          include_adult: false,\n          language: 'en-US',\n        },\n      }\n    );\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      {\n        params: {\n          api_key: API_KEY,\n          include_adult: false,\n          language: 'en-US',\n        },\n      }\n    );\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const resp = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      {\n        params: {\n          api_key: API_KEY,\n          include_adult: false,\n          language: 'en-US',\n        },\n      }\n    );\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\nexport const getMovieByName = async movieName => {\n  try {\n    const resp = await axios.get(`https://api.themoviedb.org/3/search/movie`, {\n      params: {\n        query: movieName,\n        api_key: API_KEY,\n        include_adult: false,\n        language: 'en-US',\n      },\n    });\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\n","import { getMovieCredits } from 'components/api/fetchMovies';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    getMovieCredits(movieId).then(resp => {\n      setCast(resp.cast);\n    });\n  }, [movieId]);\n  console.log(cast);\n  return (\n    <ul>\n      {cast.map(actor => (\n        <li key={actor.id}>\n          <img src={actor.profile_path} alt={actor.name} />\n          <p>{actor.name}</p>\n          <p>Character: {actor.character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","axios","concat","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","timeWindow","resp","_args","arguments","_context","prev","next","length","undefined","params","api_key","include_adult","language","sent","abrupt","data","t0","console","error","stop","apply","fetchMovieById","_ref2","_callee2","movieId","_context2","log","_x","getMovieCredits","_ref3","_callee3","_context3","_x2","getMovieReviews","_ref4","_callee4","_context4","_x3","getMovieByName","_ref5","_callee5","movieName","_context5","query","_x4","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","then","_jsx","children","map","actor","_jsxs","src","profile_path","alt","name","character","id"],"sourceRoot":""}